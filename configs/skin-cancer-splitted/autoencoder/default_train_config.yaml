# Paths and directories for training and testing data
data:
  dataset_type: StandardImageDataset    # Specify the dataset type (e.g., terumo, etc.)
  train_dir: datasets/final/skin-cancer-splitted/train
  test_dir: datasets/final/skin-cancer-splitted/test
  class_mapping: {akiec: 0, bcc: 1, bkl: 2, df: 3, mel: 4, nv: 5, vasc: 6}
  batch_size: 64 
  batch_size_test: 64
  num_workers: 3  # Number of workers to load the data
  suffle_train: true  # Shuffle the training data
  suffle_test: false

# Model configuration
model:
  name: autoencoder_resnet    # Example: You can set it to resnet18, resnet34, etc.
  model_name: resnet50
  freeze_params: false  # Freeze the parameters of backbone model 
  encoder_dim: 2048  # Dimension of the encoder output.
  decoder_channels: 2048 #  Number of channels in the decoder output
  decoder_h: 8 # Height of the decoder output feature map.
  decoder_w: 8 # Width of the decoder output feature map.
  experiment_name: autoencoder_resnet_glomerulo             # Name of the experiment
  pretrained: true  # Use pre-trained weights
  load_checkpoint: false  # Load a pre-trained model checkpoint
  checkpoint_path: ''  # Path to the model checkpoint


# Loss function configuration
loss:
  name: "mse"  # Specify the loss function (cross_entropy, etc.)

# Optimizer configuration
optimizer:
  name: "adam"  # Specify the optimizer (adam, sgd, etc.)
  lr: 1e-3  # Learning rate
  weight_decay: 1e-4  # Weight decay for regularization

# Training configuration
training:
  pipeline: "train_autoencoder"  # The pipeline to run (e.g., train, finetune, etc.)
  epochs: 100  # Number of epochs to train
  lr_scheduler:
    name: "step_lr"  # Learning rate scheduler (step_lr, cosine_annealing, etc.)
    step_size: 10  # Step size for scheduler (for step_lr)
  early_stopping_patience: 10
  
# Transformation configuration for image preprocessing
transform:
  train:
    resize: [224, 224]  # Resize images to 224x224
    horizontal_flip: true  # Disable random horizontal flip for testing
    color_jitter:
      brightness: 0.4  # Brightness factor
      contrast: 0.4  # Contrast factor
      saturation: 0.4  # Saturation factor
      hue: 0.1  # Hue factor
      probability: 0.4  # Probability of applying color jitter
      gaussian_noise:
        var_limit: [5.0, 30.0]  # Variance range for Gaussian noise
        mean: 0.0  # Mean for Gaussian noise
        probability: 0.4  # Probability of applying Gaussian noise
      gaussian_blur:
        blur_limit: [3, 7]  # Kernel size limit for Gaussian blur
        probability: 0.4  # Probability of applying Gaussian blur
    random_grayscale: 0.2
    normalize:
      mean: [0.485, 0.456, 0.406]  # Normalize mean for ImageNet
      std: [0.229, 0.224, 0.225]   # Normalize std for ImageNet
    to_tensor: true
  test:
    resize: [224, 224]  # Resize images to 224x224
    normalize:
      mean: [0.485, 0.456, 0.406]  # Normalize mean for ImageNet
      std: [0.229, 0.224, 0.225]   # Normalize std for ImageNet
    to_tensor: true

testing:
  enabled: true  # Enable testing
  pipeline: default    # The pipeline to run (e.g., default, retrieval, etc.)
  load_embeddings: false  # Load embeddings from disk
  embeddings_path: ''          # Path to load embeddings
  save_embeddings: true  # Save embeddings to disk
  normalize_embeddings: false  # Normalize embeddings to unit norm (L2 normalization)
  list_of_metrics:
    # - type: accuracy
    # - type: f1_score
    # - type: precision
    # - type: recall
  - type: map@k
    k_values: [1, 3, 6, 9, 12, 15]
  # - type: precision@k
  #   k_values: [1, 3, 5, 10]
  # - type: recall@k
  #   k_values: [1, 3, 5, 10]
  # - type: accuracy@k
  #   k_values: [1, 3, 5, 10]

# Logging configuration
logging:
  log_file: ./logs.txt    # file to save logs
  log_level: INFO    # Set logging level (DEBUG, INFO, WARNING, ERROR)

metric_logging:
  tool: txt    # Tool to log metrics (txt, csv, mlflow, etc.)
# Output configuration
output:
  results_dir: ./local_experiments/autoencoder/glomerulo    # Directory to save results




